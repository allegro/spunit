buildscript {
    repositories {
        mavenCentral()
    }
    ext.kotlin_version = '1.9.0'

    ext.versions = [
            junit: '5.9.1',
    ]
}

plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
    id 'jacoco'
    id 'pl.allegro.tech.build.axion-release' version '1.15.3'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'org.jetbrains.kotlin.jvm' version "${kotlin_version}"
}

repositories {
    mavenCentral()
}

scmVersion {
    versionCreator("versionWithBranch")
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

project.group = 'pl.allegro.tech'
project.version = scmVersion.version

dependencies {
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: versions.junit

    testImplementation group: 'com.willowtreeapps.assertk', name: 'assertk-jvm', version: '0.26'
    testRuntimeOnly  group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: versions.junit
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: versions.junit
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
}

jacoco {
    toolVersion = '0.8.2'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}

publishing {
    publications {
        sonatype(MavenPublication) {
            artifactId = "spunit"
            from components.java

            pom {
                name = 'spunit'
                description = 'Spunit test framework'
                url = 'https://github.com/allegro/spunit'
                inceptionYear = '2022'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'kochmap'
                        name = 'Piotr Kochma≈Ñski'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:allegro/spunit.git'
                    developerConnection = 'scm:git@github.com:allegro/spunit.git'
                    url = 'https://github.com/allegro/spunit'
                }
            }
        }
    }
    repositories {
        maven {
            if (version.toString().endsWith("SNAPSHOT")) {
                url = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            } else {
                url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("SONATYPE_USERNAME")
            password = System.getenv("SONATYPE_PASSWORD")
        }
    }
}

if (System.getenv("GPG_KEY_ID")) {
    signing {
        useInMemoryPgpKeys(
                System.getenv("GPG_KEY_ID"),
                System.getenv("GPG_PRIVATE_KEY"),
                System.getenv("GPG_PRIVATE_KEY_PASSWORD")
        )
        sign publishing.publications
    }
}

wrapper {
    gradleVersion = '7.5.1'
}
